{"version":3,"sources":["Components/AddCategory.jsx","Helpers/getGifs.js","hooks/useFetchGifs.js","Components/GifGridItem.jsx","Components/GifGrid.jsx","Components/GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setstate","useEffect","then","imgs","GifGridItem","className","src","alt","GifGrid","gif","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"yMAmCeA,EAhCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACnB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEII,MAAMF,GAFV,cAEbG,EAFa,gBAGEA,EAASC,OAHX,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QARtB,kBAWZM,GAXY,4CAAH,sDCwBLO,EArBM,SAAEf,GAEnB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNS,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAVAC,qBAAU,WACNpB,EAAQC,GACHoB,MAAM,SAAAC,GACHH,EAAS,CACLX,KAAMc,EACNL,SAAS,SAGtB,CAAChB,IAEGiB,GCVIK,EATK,SAAC,GAAoB,IAAlBV,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAC1B,OACI,sBAAKqB,UAAU,yCAAf,UACI,qBAAKC,IAAKtB,EAAKuB,IAAKb,IACpB,4BAAIA,QCkBDc,EAnBC,SAAC,GAAgB,IAAf1B,EAAc,EAAdA,SACd,EAAiCe,EAAaf,GAAjCa,EAAb,EAAQN,KAAaS,EAArB,EAAqBA,QAGrB,OACI,qCACI,oBAAIO,UAAU,yCAAd,SAAyDvB,IACxDgB,GAAW,mBAAGO,UAAU,wCAAb,qBACZ,qBAAKA,UAAU,YAAf,SAEQV,EAAOJ,KAAI,SAAAkB,GAAG,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIhB,aCW/BiB,EAvBM,WAEjB,MAAoC1C,mBAAS,CAAC,cAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAOA,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BACKS,EAAWe,KAAI,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCflC6B,IAASC,OACP,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.0eca3072.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(categories => [inputValue, ...categories]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (        \r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange= { handleInputChange }\r\n                \r\n            />\r\n        </form>\r\n        \r\n    )\r\n}\r\n\r\nAddCategory.propTypes ={\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","export const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=w4nJ3w17cNX166PcVqpUcinhc7zFuAc0`\r\n    const response = await fetch(url);\r\n    const {data} = await response.json();\r\n    const gifs = data.map(img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs;\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from '../Helpers/getGifs';\r\n\r\nconst useFetchGifs = ( category ) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then( imgs => {\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n    }, [category])\r\n    \r\n    return state;\r\n}\r\n\r\nexport default useFetchGifs\r\n","import React from 'react'\r\n\r\nconst GifGridItem = ({ title, url }) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\" >\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport useFetchGifs from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\n\r\nconst GifGrid = ({category}) => {    \r\n    const { data:images, loading } = useFetchGifs(category);\r\n    \r\n   \r\n    return (\r\n        <>\r\n            <h3 className=\"card animate__animated animate__fadeIn\" >{category}</h3> \r\n            {loading && <p className=\"card animate__animated animate__flash\" >Loading</p>}\r\n            <div className=\"card-grid\" >\r\n                {\r\n                    images.map(gif => (\r\n                        <GifGridItem key={gif.id} {...gif} />\r\n                    ))\r\n                }            \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import React, { useState } from 'react'\r\nimport AddCategory from './AddCategory';\r\nimport GifGrid from './GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One punch']);\r\n\r\n    // const handleAdd = () => {\r\n    //     const new_categorie = [ 'Hunter x Hunter', ...categories];\r\n    //     setCategories(new_categorie);\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr/>            \r\n            <ol>\r\n                {categories.map(category => (\r\n                    <GifGrid key={category} category={category} />\r\n                ))}\r\n            </ol>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './Components/GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}